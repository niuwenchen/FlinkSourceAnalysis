package com.jackniu.flink.api.common.time;

import java.io.Serializable;
import java.util.concurrent.TimeUnit;

import static com.jackniu.flink.util.Preconditions.checkNotNull;
/**
 * Created by JackNiu on 2019/6/10.
 */

public class Time implements Serializable {
    private static final long serialVersionUID = -350254188460915999L;

    /** The time unit for this policy's time interval. */
    private final TimeUnit unit;

    /** The size of the windows generated by this policy. */
    private final long size;

    /** Instantiation only via factory method. */
    private Time(long size, TimeUnit unit) {
        this.unit = checkNotNull(unit, "time unit may not be null");
        this.size = size;

    }

    public TimeUnit getUnit() {
        return unit;
    }
    public long getSize() {
        return size;
    }
    public long toMilliseconds() {
        return unit.toMillis(size);
    }

    @Override
    public String toString() {
        return toMilliseconds() + " ms";
    }

    public static Time of(long size, TimeUnit unit) {
        return new Time(size, unit);
    }
    public static Time milliseconds(long milliseconds) {
        return of(milliseconds, TimeUnit.MILLISECONDS);
    }
    public static Time seconds(long seconds) {
        return of(seconds, TimeUnit.SECONDS);
    }
    public static Time minutes(long minutes) {
        return of(minutes, TimeUnit.MINUTES);
    }
    public static Time hours(long hours) {
        return of(hours, TimeUnit.HOURS);
    }
    public static Time days(long days) {
        return of(days, TimeUnit.DAYS);
    }

}

